class Solution {
public:
    int helper(int x,int y,int n,int m, vector<vector<bool>>& check)
    {
        if(check[x][y] == true) return 0;
        
        int count = 0;
        
        check[x][y] = true;
        
        if(x-1 >= 0)
            count += helper(x-1,y,n,m,check);
        if(x+1 < n)
            count += helper(x+1,y,n,m,check);
        if(y-1 >= 0)
            count += helper(x,y-1,n,m,check);
        if(y+1 < m)
            count += helper(x,y+1,n,m,check);
        
        return count + 1;
    }
    int maxAreaOfIsland(vector<vector<int>>& grid) {
        if(grid.size() == 0)
            return 0;
        
        int n = grid.size();
        int m = grid[0].size();
        
        vector<vector<bool>> check(n,vector<bool>(m,true));
        
        for(int i=0;i<n;i++)
        {
            for(int j=0;j<m;j++)
            {
                if(grid[i][j] == 1)
                {
                    check[i][j] = false;
                }
            }
        }
        
        int count = 0;
        for(int i=0;i<n;i++)
        {
            for(int j=0;j<m;j++)
            {
                if(!check[i][j])
                {
                    count = max(count,helper(i,j,n,m,check));
                    
                }
            }
        }
        return count;
        
    }
};