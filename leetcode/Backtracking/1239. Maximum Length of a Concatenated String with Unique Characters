class Solution {
public:
    int helper(vector<string>& arr,string s,int index,vector<int>& visited)
    {
        if(index == arr.size())
        {
            return s.size();
        }

        int c = INT_MIN;
        string s1 = arr[index];
        int f = 0;
        for(int i=0;i<s1.size();i++)
        {
            int x = s1[i] - 97;
            if(visited[x] != 0)
            {
                f++;
                break;
            }
        }

        if(f == 0)
        {
            for(int i=0;i<s1.size();i++)
            {
                int x = s1[i] - 97;
                visited[x] = 1;
            }
            c = max(c,helper(arr,s+s1,index+1,visited));
            for(int i=0;i<s1.size();i++)
            {
                int x = s1[i] - 97;
                visited[x] = 0;
            }
        }


        int r2 = helper(arr,s,index+1,visited);
        c = max(c,r2);
        return c;

    }
    int maxLength(vector<string>& arr) {


        vector<string> brr;

        for(string s : arr)
        {
            int f = 0;
            vector<int> check(26,0);
            for(int i=0;i<s.size();i++)
            {
                int x = s[i] - 97;
                if(check[x] == 0)
                {
                    check[x] = 1;
                }
                else if(check[x] == 1)
                {
                    f++;
                    break;
                }
            }
            if(f == 0)
                brr.push_back(s);
        }

        if(brr.size() == 0)
        {
            return 0;
        }

        vector<int> visited(26,0);
        return helper(brr,"",0,visited);
    }
};