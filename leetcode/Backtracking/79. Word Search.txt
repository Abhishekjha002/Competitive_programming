class Solution {
public:
vector<vector<int>> dirN = {{0,-1},{0,1},{-1,0},{1,0}};
bool isValid(int x, int y, vector<vector<char>>& board, vector<vector<int>>& visited)
{
    if(x < 0 || y < 0 || x >= board.size() || y >= board[0].size() || visited[x][y] == 1)
            return 0;
    return 1;

}
bool helper(int x, int y, vector<vector<char>>& board, vector<vector<int>>& visited, string ans,string word)
{
    visited[x][y] = 1;
    ans += board[x][y];

    if(ans.size() >= word.size())
    {
        if(ans.size() == word.size() && ans == word)
        {
            //cout<<ans<<"\n";
            return 1;
        }
        return 0;
    }
    if(ans.size() < word.size())
    {
        bool k = 1;
        for(int i=0;i<ans.size();i++)
        {
            if(ans[i] == word[i])
            {
                continue;
            }
            else
            {
                k = 0;
                break;
            }
        }
        if(k == 0)
        {
            visited[x][y] = 0;
            return k;
        }
    }
    bool aans = 0;

    //cout<<ans<<"\n";
    for(int i=0;i<dirN.size();i++)
    {
        int r = x + dirN[i][0];
        int c = y + dirN[i][1];
        if(isValid(r,c,board,visited))
        {
            aans = aans || helper(r,c,board,visited,ans,word);
            if(aans == 1)
            {
                break;
            }
        }
    }


    visited[x][y] = 0;
    return aans;
}
bool exist(vector<vector<char>>& board, string word) {

    int n = board.size();
    int m = board[0].size();

    vector<vector<int>> visited(n,vector<int>(m,0));

    bool ans = 0;

    for(int i=0;i<n;i++)
    {
        for(int j=0;j<m;j++)
        {
            string s = string(1,board[i][j]);
            string z = string(1,word[0]);
            if(s == z)
            {
                ans = ans || helper(i,j,board,visited,"",word);
                if(ans == 1)
                {
                    break;
                }
            }
        }
        if(ans == 1)
            break;
    }

    return ans;
}
};