class Solution {
public:
    
    vector<int> par;
    
    int findPar(int vtx)
    {
        if(par[vtx] == vtx)
            return vtx;
        return par[vtx] = findPar(par[vtx]);
    }
    
    bool isSimilar(string s1, string s2)
    {
        int count = 0;
        for(int i=0;i<s1.size();i++)
        {
            if(s1[i] != s2[i] && ++count > 2)
                return false;
        }
        return true;
    }
    
    int numSimilarGroups(vector<string>& A) {
        
        int n = A.size();
        int group = n;
        
        for(int i=0;i<n;i++)
            par.push_back(i);
        
        for(int i=0;i<n;i++)
        {
            for(int j=i+1;j<n;j++)
            {
                if(isSimilar(A[i], A[j]))
                {
                    int p1 = findPar(i);
                    int p2 = findPar(j);
                    if(p1 != p2)
                    {
                        par[p1] = p2;
                        group--;
                    }
                }
            }
        }
        
        return group;
        
    }
};